/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define TAPPING_TERM 175

// The launcher key triggers Alfred
#define LAUNCHER    &kp LG(SPACE)

// Friendlier modifier definitions because the OCD gods demand it
#define COMMAND     &kp LGUI
#define OPTION      &kp LALT
#define CONTROL     &kp LCTRL
#define SHIFT       &kp LSHIFT
#define HYPER       &kp LS(LC(LA(LGUI)))

// Escape when tapped, lock when held
#define BYEEEE      &mt ESCAPE LG(Q)

/*
 * My board doesn't have encoders, so I've removed this from each keymap:
 * sensor-bindings = <&inc_dec_kp &none &none>;
 */

/ {
    keymap {
		compatible = "zmk,keymap";

        // The primary layer is configured for Dvorak and the most frequently used shortcuts
        primary {
            bindings = <
                &kp GRAVE    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp BACKSPACE
                &kp TAB      &kp APOS      &kp COMMA     &kp DOT       &kp P         &kp Y                                         &kp F         &kp G         &kp C         &kp R         &kp L         &kp BACKSLASH
                SHIFT        &kp A         &kp O         &kp E         &kp U         &kp I                                         &kp D         &kp H         &kp T         &kp N         &kp S         &kp RETURN
                SHIFT        &kp SEMICOLON &kp Q         &kp J         &kp K         &kp X                                         &kp B         &kp M         &kp W         &kp V         &kp Z         &sl 1
                                           CONTROL       OPTION        COMMAND       &kp SPACE     HYPER              &td_media    LAUNCHER      &kp LKBT      &kp RKBT      
            >;
        };

        // The secondary layer handles navigation
        secondary {
            bindings = <          
                BYEEEE        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &trans        &trans        &trans       &kp DEL
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &kp UP        &kp SLASH     &kp EQUAL    &trans
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &kp MINUS    &trans
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &trans        &trans        &trans       &trans
                                            &trans        &trans        &trans        &trans       &trans             &trans        &trans        &trans        &trans        &trans
            >;
        };

        // The gaming / numpad layer is breaks the board into a dedicated gaming macro pad or numpad
        gaming_and_numpad {
            bindings = <          
                &trans        &trans        &trans        &trans        &trans        &trans                                        &none         &none         &none         &none         &none        &trans
                &trans        &kp Q         &kp W         &kp E         &kp R         &kp T                                         &none         &kp KP_N7     &kp KP_N8     &kp KP_N9     &none        &none
                &trans        &kp A         &kp S         &kp D         &kp F         &kp G                                         &none         &kp KP_N4     &kp KP_N5     &kp KP_N6     &none        &trans
                &trans        &kp Z         &kp X         &kp C         &kp V         &kp B                                         &none         &kp KP_N1     &kp KP_N2     &kp KP_N3     &none        &to 0
                                            &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &kp KP_N0     &none
            >;
        };
    };
};
