/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define LOCK      LG(LC(Q))
#define HYPER     LS(LC(LA(LGUI)))
#define BACKTAB   LS(TAB)
#define ALFRED    LG(SPACE)
#define UPPERCASE LS(LC(LA(LG(UP))))
#define LOWERCASE LS(LC(LA(LG(DOWN))))

/*
 * If you want to add encoder support later, add the following to each layer definition:
 * sensor-bindings = <&inc_dec_kp &none &none>;
 */

/ {
    behaviors {
        // tdm: tap_dance_media {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_MEDIA";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
        // };

        // tdr: tap_dance_r {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_R";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp R>, <&kp SLASH>, <&kp QUESTION>;
        // };

        // tdl: tap_dance_l {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_L";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp L>, <&kp EQUAL>, <&kp PLUS>;
        // };

        td_s: td_s {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_S";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>;
        };
    };

    keymap {
		compatible = "zmk,keymap";
		label ="Default keymap";

        dvorak {
            bindings = <
                &mt LOCK ESC &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp BSPC
                &kp TAB      &kp SQT       &kp COMMA     &kp DOT       &kp P         &kp Y                                         &kp F         &kp G         &kp C         &trans          &trans          &kp BSLH
                &kp LSHFT    &kp A         &kp O         &kp E         &kp U         &kp I                                         &kp D         &kp H         &kp T         &kp N         &trans          &kp RET
                &kp LSHFT    &kp SEMI      &kp Q         &kp J         &kp K         &kp X                                         &kp B         &kp M         &kp W         &kp V         &kp Z         &none
                                           &kp LCTRL     &kp LALT      &kp LGUI      &kp SPACE     &mo 2               &trans        &kp HYPER     &lt 1 ALFRED  &kp LBKT      &kp RBKT
            >;
        };

        symbols_and_navigation {
            bindings = <          
                &kp GRAVE     &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &trans        &kp LBKT      &kp RBKT     &kp DEL
                &kp BACKTAB   &trans        &kp LPAR      &kp UPPERCASE &kp RPAR      &trans                                        &trans        &trans        &kp UP        &kp FSLH      &kp EQUAL    &kp UNDER
                &trans        &trans        &kp LBKT      &kp LOWERCASE &kp RBKT      &trans                                        &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &kp MINUS    &trans
                &trans        &trans        &kp LBRC      &kp UNDER     &kp RBRC      &trans                                        &trans        &trans        &trans        &trans        &trans       &trans
                                            &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans
            >;
        };

        /*
         * &ext_power EP_OFF will turn the OLEDs off but due to a known issue, they won't come back online without a quick press of the reset buttons
         * See https://github.com/zmkfirmware/zmk/issues/674
         */
        media_and_bluetooth {
            bindings = <          
                &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &trans        &trans        &trans        &trans        &trans       &ext_power EP_OFF
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &kp C_VOL_UP  &trans        &trans       &trans
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &kp C_PREV    &kp C_VOL_DN  &kp C_NEXT    &trans       &trans
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &kp K_MUTE    &trans        &trans       &trans
                                            &trans        &trans        &trans        &trans        &trans            &tog 3        &trans        &trans        &trans        &trans
            >;
        };

        gaming_and_numpad {
            bindings = <          
                &trans        &trans        &trans        &trans        &trans        &trans                                        &trans        &trans        &trans        &trans        &trans       &trans
                &trans        &kp Q         &kp W         &kp E         &kp R         &kp T                                         &trans        &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_PLUS  &trans
                &trans        &kp A         &kp S         &kp D         &kp F         &kp G                                         &trans        &kp KP_N4     &kp KP_N5     &kp KP_N6     &kp KP_MINUS &trans
                &trans        &kp Z         &kp X         &kp C         &kp V         &kp B                                         &trans        &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_EQUAL &trans
                                            &trans        &trans        &trans        &trans        &trans            &td_s        &trans        &trans        &kp KP_N0     &kp DOT
            >;
        };
    };
};
